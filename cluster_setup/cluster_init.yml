- hosts: k3s_firstnode
  tasks:
    - name: create a token
      shell: echo $(hostname) $(date +%s) | shasum | base64
      register: tkn

    - name: Install k3s on first node
      shell: curl -sfL https://get.k3s.io | sh -s - server \
        --datastore-endpoint="postgres://kube:kube@192.168.1.250:5432/kube" \
        --write-kubeconfig-mode 644 \
        --no-deploy servicelb \
        --no-deploy traefik
        --cluster-init
        --token "{{ tkn.stdout }}"
    # - name: fetch token contents
    #   register: contents
    #   shell: "sudo cat /var/lib/rancher/k3s/server/node-token"
    - name: Grab kubeconfig
      fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: ~/.kube/config
        flat: yes

- hosts: k3s_servers
  tasks:
    - name: Install k3s on server nodes
      shell: curl -sfL https://get.k3s.io | sh -s - server \
        --datastore-endpoint="postgres://kube:kube@192.168.1.250:5432/kube" \
        --write-kubeconfig-mode 644 \
        --no-deploy servicelb \
        --no-deploy traefik
        --token "{{ hostvars[groups['k3s_firstnode'][0]]['tkn']['stdout'] }}"

- hosts: k3s_agents

  tasks:
    - name: Install k3s on worker nodes
      shell: curl -sfL https://get.k3s.io | sh
      environment:
        K3S_TOKEN: "{{ hostvars[groups['k3s_firstnode'][0]]['tkn']['stdout'] }}"
        K3S_KUBECONFIG_MODE: "644"
        K3S_URL: "https://{{ groups['k3s_firstnode'][0] }}:6443"

- hosts: localhost
  connection: local
  vars:
    ansible_python_interpreter: "/usr/local/bin/python3"
  tasks:
    - name: Replace kubeconfig with correct address
      replace:
        path: ~/.kube/config
        regexp: "127.0.0.1"
        replace: "{{ groups['k3s_firstnode'][0] }}"
