apiVersion: v1
kind: PersistentVolume
metadata:
    name: nfs-data
    labels:
        mediatype: data
spec:
    capacity:
        storage: 1000Gi # This size is used to match a volume to a tenents claim
    storageClassName: manual
    accessModes:
        - ReadWriteMany # Access modes are defined below
    persistentVolumeReclaimPolicy: Retain # Reclaim policies are defined below
    nfs:
        server: 192.168.1.252
        path: /volume1/data # Please change this to the relevant share
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: nfs-data-claim
    namespace: default
spec:
    accessModes:
        - ReadWriteMany # Access modes for volumes is defined under Persistent Volumes
    storageClassName: manual
    resources:
        requests:
            storage: 500Gi # volume size requested
    selector:
        matchLabels:
            mediatype: data
---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: nfs-data-drone
    labels:
        mediatype: data-drone
spec:
    capacity:
        storage: 500Mi # This size is used to match a volume to a tenents claim
    storageClassName: manual
    accessModes:
        - ReadWriteMany # Access modes are defined below
    persistentVolumeReclaimPolicy: Retain # Reclaim policies are defined below
    nfs:
        server: 192.168.1.252
        path: /volume1/data/drone # Please change this to the relevant share
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: nfs-data-drone-claim
    namespace: drone
spec:
    accessModes:
        - ReadWriteMany # Access modes for volumes is defined under Persistent Volumes
    storageClassName: manual
    resources:
        requests:
            storage: 500Mi # volume size requested
    selector:
        matchLabels:
            mediatype: data-drone

---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: nfs-data-influxdb
    labels:
        mediatype: data-influxdb
spec:
    capacity:
        storage: 500Mi # This size is used to match a volume to a tenents claim
    storageClassName: manual
    accessModes:
        - ReadWriteMany # Access modes are defined below
    persistentVolumeReclaimPolicy: Retain # Reclaim policies are defined below
    nfs:
        server: 192.168.1.252
        path: /volume1/data/influxdb # Please change this to the relevant share
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: nfs-data-influxdb-claim
    namespace: default
spec:
    accessModes:
        - ReadWriteMany # Access modes for volumes is defined under Persistent Volumes
    storageClassName: manual
    resources:
        requests:
            storage: 500Mi # volume size requested
    selector:
        matchLabels:
            mediatype: data-influxdb
---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: nfs-data-mosquitto-data
    labels:
        mediatype: data-mosquitto-data
spec:
    capacity:
        storage: 500Mi # This size is used to match a volume to a tenents claim
    storageClassName: manual
    accessModes:
        - ReadWriteMany # Access modes are defined below
    persistentVolumeReclaimPolicy: Retain # Reclaim policies are defined below
    nfs:
        server: 192.168.1.252
        path: /volume1/data/mosquitto/data # Please change this to the relevant share
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: nfs-data-mosquitto-data-claim
    namespace: default
spec:
    accessModes:
        - ReadWriteMany # Access modes for volumes is defined under Persistent Volumes
    storageClassName: manual
    resources:
        requests:
            storage: 500Mi # volume size requested
    selector:
        matchLabels:
            mediatype: data-mosquitto-data
---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: nfs-data-mosquitto-logs
    labels:
        mediatype: data-mosquitto-logs
spec:
    capacity:
        storage: 500Mi # This size is used to match a volume to a tenents claim
    storageClassName: manual
    accessModes:
        - ReadWriteMany # Access modes are defined below
    persistentVolumeReclaimPolicy: Retain # Reclaim policies are defined below
    nfs:
        server: 192.168.1.252
        path: /volume1/data/mosquitto/logs # Please change this to the relevant share
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: nfs-data-mosquitto-logs-claim
    namespace: default
spec:
    accessModes:
        - ReadWriteMany # Access modes for volumes is defined under Persistent Volumes
    storageClassName: manual
    resources:
        requests:
            storage: 500Mi # volume size requested
    selector:
        matchLabels:
            mediatype: data-mosquitto-logs
---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: nfs-data-nextcloud
    labels:
        mediatype: data-nextcloud
spec:
    capacity:
        storage: 100Gi # This size is used to match a volume to a tenents claim
    storageClassName: manual
    accessModes:
        - ReadWriteOnce # Access modes are defined below
    persistentVolumeReclaimPolicy: Retain # Reclaim policies are defined below
    nfs:
        server: 192.168.1.252
        path: /volume1/data/nextcloud # Please change this to the relevant share
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: nfs-data-nextcloud-claim
    namespace: default
spec:
    accessModes:
        - ReadWriteOnce # Access modes for volumes is defined under Persistent Volumes
    storageClassName: manual
    resources:
        requests:
            storage: 100Gi # volume size requested
    selector:
        matchLabels:
            mediatype: data-nextcloud

---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: nfs-data-nodered
    labels:
        mediatype: data-nodered
spec:
    capacity:
        storage: 500Mi # This size is used to match a volume to a tenents claim
    storageClassName: manual
    accessModes:
        - ReadWriteMany # Access modes are defined below
    persistentVolumeReclaimPolicy: Retain # Reclaim policies are defined below
    nfs:
        server: 192.168.1.252
        path: /volume1/data/nodered # Please change this to the relevant share
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: nfs-data-nodered-claim
    namespace: default
spec:
    accessModes:
        - ReadWriteMany # Access modes for volumes is defined under Persistent Volumes
    storageClassName: manual
    resources:
        requests:
            storage: 500Mi # volume size requested
    selector:
        matchLabels:
            mediatype: data-nodered
---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: nfs-data-prometheus
    labels:
        mediatype: data-prometheus
spec:
    capacity:
        storage: 500Mi # This size is used to match a volume to a tenents claim
    storageClassName: manual
    accessModes:
        - ReadWriteMany # Access modes are defined below
    persistentVolumeReclaimPolicy: Retain # Reclaim policies are defined below
    nfs:
        server: 192.168.1.252
        path: /volume1/data/prometheus # Please change this to the relevant share
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: nfs-data-prometheus-claim
    namespace: monitoring
spec:
    accessModes:
        - ReadWriteMany # Access modes for volumes is defined under Persistent Volumes
    storageClassName: manual
    resources:
        requests:
            storage: 500Mi # volume size requested
    selector:
        matchLabels:
            mediatype: data-prometheus
