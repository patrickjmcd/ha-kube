beets:
  replicaCount: 1
  uid: 1026
  gid: 100

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
    path: /
    hosts:
      - beets.patrickjmcd.org
    tls:
      - secretName: beets-patrickjmcd-org
        hosts:
          - beets.patrickjmcd.org

  volumes:
    - name: downloads
      persistentVolumeClaim:
        claimName: nfs-downloads-claim
    - name: config
      persistentVolumeClaim:
        claimName: nfs-config-beets-claim
    - name: music
      persistentVolumeClaim:
        claimName: nfs-music-claim

  volumeMounts:
    - name: config
      mountPath: "/config"
    - name: downloads
      mountPath: "/downloads"
      subPath: "complete/Music"
    - name: music
      mountPath: "/music"

  resources:
    requests:
      memory: 128Mi
      cpu: 0.1
    limits:
      memory: 1Gi
      cpu: 2

jellyfin:
  replicaCount: 1

  env:
    - name: PUID
      value: "1026"
    - name: PGID
      value: "100"
    - name: TZ
      value: "America/Chicago"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    path: /
    hosts:
      - jellyfin.pmcd.io
    tls:
      - secretName: jellyfin-prod-tls
        hosts:
          - jellyfin.pmcd.io

  volumes:
    - name: config
      persistentVolumeClaim:
        claimName: nfs-config-jellyfin-claim
    - name: tv
      persistentVolumeClaim:
        claimName: nfs-tv-claim
    - name: movies
      persistentVolumeClaim:
        claimName: nfs-movies-claim
    - name: music
      persistentVolumeClaim:
        claimName: nfs-music-claim
    - name: videos
      persistentVolumeClaim:
        claimName: nfs-video-claim

  volumeMounts:
    - name: config
      mountPath: "/config"
    - name: tv
      mountPath: "/data/tvshows"
    - name: movies
      mountPath: "/data/movies"
    - name: music
      mountPath: "/data/music"
    - name: videos
      mountPath: "/data/videos"

  resources:
    requests:
      memory: 256Mi
      cpu: 0.1
    limits:
      memory: 2048Mi
      cpu: 2

lidarr:
  replicaCount: 1

  env:
    - name: PUID
      value: "1026"
    - name: PGID
      value: "100"

  uid: 1026
  gid: 100

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
      nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
      nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
    path: /
    hosts:
      - lidarr.pmcd.io
    tls:
      - secretName: "lidarr-prod-tls"
        hosts:
          - lidarr.pmcd.io

  volumes:
    - name: config
      persistentVolumeClaim:
        claimName: nfs-config-lidarr-claim
    - name: music
      persistentVolumeClaim:
        claimName: nfs-music-claim
    - name: downloads
      persistentVolumeClaim:
        claimName: nfs-downloads-claim

  volumeMounts:
    - name: config
      mountPath: "/config"
    - name: downloads
      mountPath: "/downloads"
    - name: music
      mountPath: "/music"

  resources:
    requests:
      memory: 128Mi
      cpu: 0.1
    limits:
      memory: 512Mi
      cpu: 1.0

  annotations:
    consul.hashicorp.com/connect-inject: "true"
    consul.hashicorp.com/connect-service-upstreams: "nzbget:6789,nzbhydra:5076,sabnzbd:8080"

  nodeSelector:
    beta.kubernetes.io/arch: amd64

nzbget:
  env:
    - name: PUID
      value: "1026"
    - name: PGID
      value: "100"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
      nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
      nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"

    path: /
    hosts:
      - nzbget.pmcd.io
    tls:
      - secretName: "nzbget-prod-tls"
        hosts:
          - nzbget.pmcd.io

  volumes:
    - name: config
      persistentVolumeClaim:
        claimName: nfs-config-nzbget-claim
    - name: downloads
      persistentVolumeClaim:
        claimName: nfs-downloads-claim

  volumeMounts:
    - name: config
      mountPath: "/config"
    - name: downloads
      mountPath: "/downloads"

  resources:
    requests:
      memory: 128Mi
      cpu: 0.1
    limits:
      memory: 512Mi
      cpu: 1.0

  annotations:
    consul.hashicorp.com/connect-inject: "true"

  nodeSelector:
    beta.kubernetes.io/arch: amd64

nzbhydra:
  replicaCount: 1
  env:
    - name: PUID
      value: "1026"
    - name: PGID
      value: "100"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
      nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
      nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"

    path: /
    hosts:
      - nzbhydra.pmcd.io
    tls:
      - secretName: "nzbhydra-prod-tls"
        hosts:
          - nzbhydra.pmcd.io

  persistence:
    enabled: true
    existingClaim: nfs-config-nzbhydra-claim
    accessMode: ReadWriteOnce
    size: 100Mi

  volumes:
    - name: config
      persistentVolumeClaim:
        claimName: nfs-config-nzbhydra-claim

  volumeMounts:
    - name: config
      mountPath: "/config"

  resources:
    requests:
      memory: 128Mi
      cpu: 0.1
    limits:
      memory: 512Mi
      cpu: 1.0

  annotations:
    consul.hashicorp.com/connect-inject: "true"
    consul.hashicorp.com/connect-service-upstreams: "nzbget:6789,sabnzbd:8080"

  nodeSelector:
    beta.kubernetes.io/arch: amd64

ombi:
  replicaCount: 1

  env:
    - name: PUID
      value: "1026"
    - name: PGID
      value: "100"
    - name: "TZ"
      value: "America/Chicago"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
    path: /
    hosts:
      - ombi.pmcd.io
    tls:
      - secretName: "ombi-prod-tls"
        hosts:
          - ombi.pmcd.io

  volumes:
    - name: config
      persistentVolumeClaim:
        claimName: nfs-config-ombi-claim

  volumeMounts:
    - name: config
      mountPath: "/config"

  resources:
    requests:
      memory: "256Mi"
      cpu: "250m"
    limits:
      memory: "512Mi"
      cpu: "500m"

radarr:
  replicaCount: 1

  env:
    - name: PUID
      value: "1026"
    - name: PGID
      value: "100"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
      nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
      nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
    path: /
    hosts:
      - radarr.pmcd.io
    tls:
      - secretName: "radarr-prod-tls"
        hosts:
          - radarr.pmcd.io

  volumes:
    - name: config
      persistentVolumeClaim:
        claimName: nfs-config-radarr-claim
    - name: movies
      persistentVolumeClaim:
        claimName: nfs-movies-claim
    - name: downloads
      persistentVolumeClaim:
        claimName: nfs-downloads-claim

  volumeMounts:
    - name: config
      mountPath: "/config"
    - name: downloads
      mountPath: "/downloads"
    - name: movies
      mountPath: "/movies"

  resources:
    requests:
      memory: 128Mi
      cpu: 0.1
    limits:
      memory: 512Mi
      cpu: 1.0
  annotations:
    consul.hashicorp.com/connect-inject: "true"
    consul.hashicorp.com/connect-service-upstreams: "nzbget:6789,nzbhydra:5076,sabnzbd:8080"

  nodeSelector:
    beta.kubernetes.io/arch: amd64

sonarr:
  replicaCount: 1

  env:
    - name: PUID
      value: "1026"
    - name: PGID
      value: "100"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
      nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
      nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"

    path: /
    hosts:
      - sonarr.pmcd.io
    tls:
      - secretName: "sonarr-prod-tls"
        hosts:
          - sonarr.pmcd.io

  volumes:
    - name: config
      persistentVolumeClaim:
        claimName: nfs-config-sonarr-claim
    - name: tv
      persistentVolumeClaim:
        claimName: nfs-tv-claim
    - name: downloads
      persistentVolumeClaim:
        claimName: nfs-downloads-claim

  volumeMounts:
    - name: config
      mountPath: "/config"
    - name: downloads
      mountPath: "/downloads"
    - name: tv
      mountPath: "/tv"

  resources:
    requests:
      memory: 128Mi
      cpu: 0.1
    limits:
      memory: 512Mi
      cpu: 1.0
  annotations:
    consul.hashicorp.com/connect-inject: "true"
    consul.hashicorp.com/connect-service-upstreams: "nzbget:6789,nzbhydra:5076,sabnzbd:8080"

  nodeSelector:
    beta.kubernetes.io/arch: amd64

sabnzbd:
  replicaCount: 1
  env:
    - name: PUID
      value: "1026"
    - name: PGID
      value: "100"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
      nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
      nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
      nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
    path: /
    hosts:
      - sabnzbd.pmcd.io
    tls:
      - secretName: "sabnzbd-prod-tls"
        hosts:
          - sabnzbd.pmcd.io

  volumes:
    - name: config
      persistentVolumeClaim:
        claimName: nfs-config-sabnzbd-claim
    - name: downloads
      persistentVolumeClaim:
        claimName: nfs-downloads-claim

  volumeMounts:
    - name: config
      mountPath: "/config"
    - name: downloads
      mountPath: "/downloads"

  resources:
    requests:
      memory: 128Mi
      cpu: 0.1
    limits:
      memory: 512Mi
      cpu: 1.0
  annotations:
    consul.hashicorp.com/connect-inject: "true"

  nodeSelector:
    beta.kubernetes.io/arch: amd64
