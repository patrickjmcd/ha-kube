beets:
    replicaCount: 1
    uid: 1026
    gid: 100

    service:
        type: ClusterIP
        port: 80

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        path: /
        hosts:
            - beets.pmcd.io
        tls:
            - secretName: "beets-prod-tls"
              hosts:
                  - beets.pmcd.io

    volumes:
        - name: downloads
          persistentVolumeClaim:
              claimName: nfs-downloads-claim
        - name: config
          persistentVolumeClaim:
              claimName: nfs-config-beets-claim
        - name: music
          persistentVolumeClaim:
              claimName: nfs-music-claim

    volumeMounts:
        - name: config
          mountPath: "/config"
        - name: downloads
          mountPath: "/downloads"
          subPath: "complete/Music"
        - name: music
          mountPath: "/music"

    resources:
        requests:
            memory: 128Mi
            cpu: 0.1
        limits:
            memory: 1Gi
            cpu: 2

jellyfin:
    env:
        TZ: America/Chicago
        PUID: 1026
        PGID: 100

    persistence:
        config:
            enabled: true
            emptyDir: false
            mountPath: /config
            existingClaim: "nfs-config-jellyfin-claim"

        music:
            enabled: true
            emptyDir: false
            mountPath: /music
            existingClaim: "nfs-music-claim"

        movies:
            enabled: true
            emptyDir: false
            mountPath: /movies
            existingClaim: "nfs-movies-claim"

        tv:
            enabled: true
            emptyDir: false
            mountPath: /tv
            existingClaim: "nfs-tv-claim"

        video:
            enabled: true
            emptyDir: false
            mountPath: /video
            existingClaim: "nfs-video-claim"

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        hosts:
            - host: jellyfin.pmcd.io
              paths:
                  - path: /
                    pathType: Prefix
        tls:
            - secretName: jellyfin-prod-tls
              hosts:
                  - jellyfin.pmcd.io

lidarr:
    image:
        repository: patrickjmcd/lidarr
        tag: latest
    env:
        TZ: America/Chicago
        PUID: 1026
        PGID: 100

    persistence:
        config:
            enabled: true
            emptyDir: false
            mountPath: /config
            existingClaim: "nfs-config-lidarr-claim"

        music:
            enabled: true
            emptyDir: false
            mountPath: /music
            existingClaim: "nfs-music-claim"

        downloads:
            enabled: true
            emptyDir: false
            mountPath: /downloads
            existingClaim: "nfs-downloads-claim"

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        hosts:
            - host: lidarr.pmcd.io
              paths:
                  - path: /
                    pathType: Prefix
        tls:
            - secretName: lidarr-prod-tls
              hosts:
                  - lidarr.pmcd.io

nzbget:
    env:
        TZ: America/Chicago
        PUID: 1026
        PGID: 100

    persistence:
        config:
            enabled: true
            emptyDir: false
            mountPath: /config
            existingClaim: "nfs-config-nzbget-claim"

        downloads:
            enabled: true
            emptyDir: false
            mountPath: /downloads
            existingClaim: "nfs-downloads-claim"

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        hosts:
            - host: nzbget.pmcd.io
              paths:
                  - path: /
                    pathType: Prefix
        tls:
            - secretName: nzbget-prod-tls
              hosts:
                  - nzbget.pmcd.io

nzbhydra2:
    env:
        TZ: America/Chicago
        PUID: 1026
        PGID: 100

    persistence:
        config:
            enabled: true
            emptyDir: false
            mountPath: /config
            existingClaim: "nfs-config-nzbhydra-claim"

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        hosts:
            - host: nzbhydra.pmcd.io
              paths:
                  - path: /
                    pathType: Prefix
        tls:
            - secretName: nzbhydra-prod-tls
              hosts:
                  - nzbhydra.pmcd.io

ombi:
    env:
        TZ: America/Chicago
        PUID: 1026
        PGID: 100

    persistence:
        config:
            enabled: true
            emptyDir: false
            mountPath: /config
            existingClaim: "nfs-config-ombi-claim"

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body

        hosts:
            - host: ombi.pmcd.io
              paths:
                  - path: /
                    pathType: Prefix
        tls:
            - secretName: ombi-prod-tls
              hosts:
                  - ombi.pmcd.io

radarr:
    env:
        TZ: America/Chicago
        PUID: 1026
        PGID: 100

    persistence:
        config:
            enabled: true
            emptyDir: false
            mountPath: /config
            existingClaim: "nfs-config-radarr-claim"

        movies:
            enabled: true
            emptyDir: false
            mountPath: /movies
            existingClaim: "nfs-movies-claim"

        downloads:
            enabled: true
            emptyDir: false
            mountPath: /downloads
            existingClaim: "nfs-downloads-claim"
    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        hosts:
            - host: radarr.pmcd.io
              paths:
                  - path: /
                    pathType: Prefix
        tls:
            - secretName: radarr-prod-tls
              hosts:
                  - radarr.pmcd.io

sonarr:
    env:
        TZ: America/Chicago
        PUID: 1026
        PGID: 100

    persistence:
        config:
            enabled: true
            emptyDir: false
            mountPath: /config
            existingClaim: "nfs-config-sonarr-claim"

        tv:
            enabled: true
            emptyDir: false
            mountPath: /tv
            existingClaim: "nfs-tv-claim"

        downloads:
            enabled: true
            emptyDir: false
            mountPath: /downloads
            existingClaim: "nfs-downloads-claim"

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        hosts:
            - host: sonarr.pmcd.io
              paths:
                  - path: /
                    pathType: Prefix
        tls:
            - secretName: sonarr-prod-tls
              hosts:
                  - sonarr.pmcd.io

sabnzbd:
    env:
        TZ: America/Chicago
        PUID: 1026
        PGID: 100

    persistence:
        config:
            enabled: true
            emptyDir: false
            mountPath: /config
            existingClaim: "nfs-config-sabnzbd-claim"

        downloads:
            enabled: true
            emptyDir: false
            mountPath: /downloads
            existingClaim: "nfs-downloads-claim"

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        hosts:
            - host: sabnzbd.pmcd.io
              paths:
                  - path: /
                    pathType: Prefix
        tls:
            - secretName: sabnzbd-prod-tls
              hosts:
                  - sabnzbd.pmcd.io

navidrome:
    env:
        ND_SCANINTERVAL: 15m
        ND_LOGLEVEL: info
        ND_SESSIONTIMEOUT: 24h
        ND_ENABLETRANSCODINGCONFIG: "true"
        ND_MUSICFOLDER: /music
        TZ: America/Chicago
        PUID: 1026
        PGID: 100

    persistence:
        config:
            enabled: true
            emptyDir: false
            mountPath: /config
            existingClaim: "nfs-config-navidrome-claim"

        music:
            enabled: true
            emptyDir: false
            mountPath: /music
            existingClaim: "nfs-music-claim"

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            # nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            # nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        hosts:
            - host: navidrome.pmcd.io
              paths:
                  - path: /
                    pathType: Prefix
        tls:
            - secretName: navidrome-prod-tls
              hosts:
                  - navidrome.pmcd.io
