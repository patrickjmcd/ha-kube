homebridge:
    replicaCount: 1

    image:
        repository: oznu/homebridge
        tag: latest
        pullPolicy: IfNotPresent

    config_ui_port: 8888
    loadbalancer_ip: 192.168.8.201 # IP Address used to define the loadbalancer service

    env:
        - name: UID
          value: "1026"
        - name: GID
          value: "100"
        - name: tz
          value: America/Chicago

    service:
        type: ClusterIP
        port: 80

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod"
            nginx.ingress.kubernetes.io/proxy-body-size: "50m"
        path: /
        hosts:
            - homebridge.pmcd.io
        tls:
            - secretName: homebridge-prod-tls
              hosts:
                  - homebridge.pmcd.io

    volumes:
        - name: homebridge
          persistentVolumeClaim:
              claimName: nfs-config-homebridge-claim

    volumeMounts:
        - name: homebridge
          mountPath: "/homebridge"

    resources:
        requests:
            memory: 2048Mi
            cpu: 1
        limits:
            memory: 4096Mi
            cpu: 5

    nodeSelector: {}

    tolerations: []

    affinity: {}
    annotations:
        {}
        # "consul.hashicorp.com/connect-inject": "true"

particlewebhook:
    replicaCount: 1

    image:
        repository: patrickjmcd/influxdb_webhook # the image of the web server you'd like to run
        tag: latest
        pullPolicy: Always

    service:
        type: ClusterIP
        port: 80

    # secret with keys influx-server, influx-user, influx-password
    influxDbSecretName: influxdb-auth

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
        path: /
        hosts:
            - webhook.pmcd.io
        tls:
            - secretName: "webhook-prod-tls"
              hosts:
                  - webhook.pmcd.io

    resources:
        requests:
            memory: 128Mi
            cpu: 0.1
        limits:
            memory: 256Mi
            cpu: 0.5

    nodeSelector: {}

    tolerations: []

    affinity: {}

home-assistant:
    # Default values for zwave2mqtt.

    image:
        repository: homeassistant/home-assistant
        pullPolicy: IfNotPresent
        tag: 2020.12.1

    # Enable a prometheus-operator servicemonitor
    prometheus:
        serviceMonitor:
            enabled: false
        # interval: 1m
        # additionalLabels: {}

    persistence:
        config:
            enabled: true
            emptyDir: false
            existingClaim: "nfs-config-homeassistant-claim"

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
        hosts:
            - host: ha.pmcd.io
              paths:
                  - path: /
                    # Ignored if not kubeVersion >= 1.14-0
                    pathType: Prefix
        tls:
            - secretName: homeassistant-prod-tls
              hosts:
                  - ha.pmcd.io
    addons:
        codeserver:
            enabled: true
            volumeMounts:
                - name: config
                  mountPath: /config
            ingress:
                enabled: true
                annotations:
                    kubernetes.io/ingress.class: nginx
                    cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
                    nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
                    nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
                    nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
                hosts:
                    - host: code-ha.pmcd.io
                      paths:
                          - path: /
                            pathType: Prefix
                tls:
                    - secretName: code-homeassistant-prod-tls
                      hosts:
                          - code-ha.pmcd.io

node-red:
    # Default values for node-red.
    image:
        repository: nodered/node-red
        pullPolicy: IfNotPresent
        tag: 1.2.5

    strategy:
        type: Recreate

    # See more environment varaibles in the node-red documentation
    # https://nodered.org/docs/getting-started/docker
    env:
        TZ: America/Chicago
        # NODE_OPTIONS:
        # NODE_RED_ENABLE_PROJECTS:
        # NODE_RED_ENABLE_SAFE_MODE:
        # FLOWS:

    service:
        port:
            port: 1880

    persistence:
        data:
            enabled: false
            emptyDir: false
            mountPath: /data
            existingClaim: nfs-data-nodered-claim

    ingress:
        enabled: true
        annotations:
            kubernetes.io/ingress.class: nginx
            cert-manager.io/cluster-issuer: "letsencrypt-prod" # Encrypt using the ClusterIssuer deployed while setting up Cert-Manager
            nginx.ingress.kubernetes.io/proxy-body-size: "50m" # Increase the size of the maximum allowed size of the client request body
            nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
            nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
        hosts:
            - host: nodered.pmcd.io
              paths:
                  - path: /
                    # Ignored if not kubeVersion >= 1.14-0
                    pathType: Prefix
        tls:
            - secretName: nodered-prod-tls
              hosts:
                  - nodered.pmcd.io
mosquitto:
    replicaCount: 1

    service:
        type: LoadBalancer # ClusterIP
        port: 1883
        websocketPort: 9001
        annotations: {}
        loadBalancerIP: 192.168.8.204

    resources:
        limits:
            cpu: 100m
            memory: 128Mi
        requests:
            cpu: 100m
            memory: 128Mi

    # customConfig:

    monitoring:
        podMonitor:
            enabled: false
        sidecar:
            enabled: false
            port: 9234
            args:
                - "--use-splitted-config"
            envs:
                - name: MQTT_CLIENT_ID
                  value: exporter
                - name: BROKER_HOST
                  valueFrom:
                      fieldRef:
                          fieldPath: status.podIP
            image:
                repository: nolte/mosquitto-exporter
                tag: v0.6.3
                pullPolicy: IfNotPresent
            resources:
                limits:
                    cpu: 300m
                    memory: 128Mi
                requests:
                    cpu: 100m
                    memory: 64Mi
