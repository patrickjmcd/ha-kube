# replicaCount: 1

# image:
#     repository: oznu/homebridge
#     tag: latest
#     pullPolicy: Always

# config_ui_port: 8888
# loadbalancer_ip: 192.168.1.231 # IP Address used to define the loadbalancer service

# env:
#     - name: UID
#       value: "1026"
#     - name: GID
#       value: "100"
#     - name: tz
#       value: America/Chicago

# service:
#     type: ClusterIP
#     port: 80

# ingress:
#     enabled: true
#     annotations:
#         kubernetes.io/ingress.class: nginx
#         cert-manager.io/cluster-issuer: "letsencrypt-prod"
#         nginx.ingress.kubernetes.io/proxy-body-size: "50m"
#         nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
#         nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
#     path: /
#     hosts:
#         - homebridge.pmcd.io
#     tls:
#         - secretName: homebridge-prod-tls
#           hosts:
#               - homebridge.pmcd.io

# volumes:
#     - name: homebridge
#       persistentVolumeClaim:
#           claimName: nfs-config-homebridge-claim

# volumeMounts:
#     - name: homebridge
#       mountPath: "/homebridge"

# resources:
#     requests:
#         memory: 2048Mi
#         cpu: 1
#     limits:
#         memory: 4096Mi
#         cpu: 5

# nodeSelector: {}

# tolerations: []

# affinity: {}
# annotations:
#     {}
#     # "consul.hashicorp.com/connect-inject": "true"

# ---

# Default values for homebridge.

replicaCount: 1

image:
  # -- Image repository
  repository: oznu/homebridge
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  # Possible values listed [here](https://hub.docker.com/r/oznu/homebridge/tags)
  tag: latest

# -- Specify the container timezone
timezone: "America/Chicago"
puid: 1026
pgid: 100

config:
  enableUI: true

extraEnvs: 
    - name: HOMEBRIDGE_INSECURE
      value: "1"

service:
  # -- Kubernetes service type for the homebridge GUI
  type: LoadBalancer
  homebridgePort: 51827
  httpPort: 8888
  loadBalancerIP: 192.168.1.231
  externalIPs: 
    - 192.168.1.231


ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/auth-url: "https://sso.pmcd.io/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://sso.pmcd.io/oauth2/start?rd=https://$host$request_uri"
  path: /
  hosts:
    - homebridge.pmcd.io
  tls:
    - secretName: homebridge-prod-tls
      hosts:
        - homebridge.pmcd.io

# -- Enable hostNetwork - needed for discovery to work
hostNetwork: true

persistence:
  existingClaim: nfs-config-homebridge-claim


probes:
  liveness:
    # -- Use the livenessProbe?
    enabled: true
    # -- Specify liveness `initialDelaySeconds` parameter for the deployment
    initialDelaySeconds: 60
    # -- Specify liveness `failureThreshold` parameter for the deployment
    failureThreshold: 5
    # -- Specify liveness `timeoutSeconds` parameter for the deployment
    timeoutSeconds: 10
  readiness:
    # -- Use the readinessProbe?
    enabled: true
    # -- Specify readiness `initialDelaySeconds` parameter for the deployment
    initialDelaySeconds: 60
    # -- Specify readiness `failureThreshold` parameter for the deployment
    failureThreshold: 5
    # -- Specify readiness `timeoutSeconds` parameter for the deployment
    timeoutSeconds: 10
  startup:
    # -- Use the startupProbe? (new in kubernetes 1.16)
    enabled: true
    # -- Specify startup `failureThreshold` parameter for the deployment
    failureThreshold: 30
    # -- Specify startup `periodSeconds` parameter for the deployment
    periodSeconds: 10

# -- CPU/Memory resource requests/limits or the homebridge GUI
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- Node labels for pod assignment or the homebridge GUI
nodeSelector: {}

# -- Toleration labels for pod assignment or the homebridge GUI
tolerations: []

# -- Affinity settings for pod assignment or the homebridge GUI
affinity: {}

